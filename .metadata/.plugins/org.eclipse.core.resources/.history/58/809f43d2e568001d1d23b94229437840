package dev.jefferson.shoppingapi.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import dev.jefferson.shoppingapi.dto.ShopDTO;
import dev.jefferson.shoppingapi.repository.ShopRepository;

@Service
public class ShopService {
	
	private ShopRepository repository;
	
	
	public List<ShopDTO> getAll() {
		return repository.findAll().stream()
				.map(ShopDTO::convert)
				.collect(Collectors.toList());
	}
	
	
	public List<ShopDTO> getByUser(final String userIdentifier) {
		return repository.findAllByUserIdentifier(userIdentifier).stream()
				.map(ShopDTO::convert)
				.collect(Collectors.toList());
	}
	
	
	public List<ShopDTO> getByDate(final ShopDTO shopDTO) {
		return repository.findAllByDateGreaterThanEquals(shopDTO.getDate()).stream()
				.map(ShopDTO::convert)
				.collect(Collectors.toList());
	}
	
	public ShopDTO findById(final long productId) {
		return repository.findById(productId)
				.orElseThrow(() -> new IllegalArgumentException("ProductId not found"));
	}

}
